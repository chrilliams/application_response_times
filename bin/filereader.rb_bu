#!/usr/bin/env ruby
class Stats

  APP_PATH = File.expand_path('../../config/application',  __FILE__)
  require File.expand_path('../../config/boot',  __FILE__)
  require APP_PATH
  # set Rails.env here if desired
  Rails.application.require_environment!

  def initialize
    #@file = File.open('/home/player/Desktop/test.log','r')
    @file = File.open('/home/player/Desktop/phl-DMSms1.log.2014-04-28','r')
    
  end


  def process_file
     ## check the stage table is empty
     Stage.delete_all

    @regex_dDMS = /(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) \[.*\] (.*)- .*?,.*?,(.*?),(.*?),.*?,.*?,.*?,.*?,(.*?),(.*?),(.*?),.*$/
    @file.each_line do |line|
      if line.match(/DVLA_SCHEDULER/)
        #puts "dvla_scheduler" ## going to ignore for the first sprint
      elsif line.match(@regex_dDMS)
        #puts line.match(@regex_dDMS).captures
        ary_captures = line.match(@regex_dDMS).captures
#        puts "date/time: " + ary_captures[0] \
#          + " App: " + ary_captures[1] \
#          + " code: " + ary_captures[2].delete("\'") \
#          + " description: " + ary_captures[3].delete("\'") \
#          + " conversation_id: " + ary_captures[4].delete("\'") \
#          + " system: " + ary_captures[5].delete("\'") \
#          + " sub_system: " + ary_captures[6].delete("\'")
        
        Stage.create([
          {
            ev_time: DateTime.strptime( ary_captures[0], "%Y-%m-%d %H:%M:%S,%L"),
            app_id: ary_captures[1],
            code: ary_captures[2].delete("\'"),
            description: ary_captures[3].delete("\'"),
            conversation_id: ary_captures[4].delete("\'"),
            system: ary_captures[5].delete("\'"),
            sub_system: ary_captures[6].delete("\'")
          }
        ])
        #puts "done"
      else
        puts "error on line: " + line
      end
    end
  end
  Stats.new.process_file
end
